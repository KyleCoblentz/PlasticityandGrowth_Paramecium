newdata_length <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
length_predictions <- predict.gam(gam_length, newdata = newdata_length)
newdata_length <- cbind(newdata_length, length_predictions)
length_predictions <- newdata_length %>% group_by(Line) %>%
summarise(mean_length = mean(length_predictions),
min_length = min(length_predictions),
max_length = max(length_predictions),
range_length = max_length-min_length,
stand_range_length = range_length/max_length)
newdata_width <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
width_predictions <- predict.gam(gam_width, newdata = newdata_width)
newdata_width <- cbind(newdata_width, width_predictions)
width_predictions <- newdata_width %>% group_by(Line) %>%
summarise(mean_width = mean(width_predictions),
min_width = min(width_predictions),
max_width = max(width_predictions),
range_width = max_width-min_width,
stand_range_width = range_width/max_width)
newdata_ar <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
ar_predictions <- predict.gam(gam_ar, newdata = newdata_ar)
newdata_ar <- cbind(newdata_ar, ar_predictions)
ar_predictions <- newdata_ar %>% group_by(Line) %>%
summarise(mean_ar = mean(ar_predictions),
min_ar = min(ar_predictions),
max_ar = max(ar_predictions),
range_ar = max_ar-min_ar,
stand_range_ar = range_ar/max_ar)
newdata_speed <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
speed_predictions <- predict.gam(gam_speed, newdata = newdata_speed)
newdata_speed <- cbind(newdata_speed, speed_predictions)
speed_predictions <- newdata_speed %>% group_by(Line) %>%
summarise(mean_speed = mean(speed_predictions),
min_speed = min(speed_predictions),
max_speed = max(speed_predictions),
range_speed = max_speed-min_speed,
stand_range_speed = range_speed/max_speed)
newdata_tpc <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
predict_tpc <- predict.gam(gam_growth, newdata = newdata_tpc)
newdata_tpc <- cbind(newdata_tpc, predict_tpc)
tpc_predictions <- newdata_tpc %>% group_by(Line) %>%
summarise(mean_growth = mean(predict_tpc),
min_growth = min(predict_tpc),
max_growth = max(predict_tpc),
range_growth = max_growth-min_growth,
stand_range_growth = range_growth/max_growth)
col_data <- full_join(area_predictions, tpc_predictions, by = "Line")
col_data <- full_join(col_data, length_predictions, by = 'Line')
col_data <- full_join(col_data, width_predictions, by = "Line")
col_data <- full_join(col_data, ar_predictions, by = "Line")
col_data <- full_join(col_data, speed_predictions, by = "Line")
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_speed, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_speed, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_area, y = stand_range_area)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_ar, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = tpc_data, aes(x = Temperature, y = Growth.Rate.Hours, color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
col_data
tpc_descriptions <- newdata_tpc %>% group_by(Line)
seq(o, 40, by = 0.1)
seq(0, 40, by = 0.1)
tpc_data <- read.csv(file = 'StartPop_TPC.csv')
tpc_data <- tpc_data %>% filter(Genotype != 'blank')
tpc_data$Genotype <- as.factor(paste0('G', tpc_data$Genotype))
colnames(tpc_data)[5] <- 'Line'
ggplot(data = tpc_data, aes(x = Temperature, y = Growth.Rate.Hours, color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
tpc_data <- tpc_data %>% filter(!is.na(Growth.Rate.Hours))
tpc_data <- tpc_data %>% filter(!is.infinite(Growth.Rate.Hours))
gam_growth <- gam(formula = Growth.Rate.Hours ~ Line + s(Temperature, k = 5, bs = 'tp', by = Line), data = tpc_data, method = 'REML')
summary(gam_growth)
draw(gam_growth, residuals = TRUE)
newdata_tpc <- data.frame(Temperature = rep(seq(0, 40, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 401))
predict_tpc <- predict.gam(gam_growth, newdata = newdata_tpc)
newdata_tpc <- cbind(newdata_tpc, predict_tpc)
View(newdata_tpc)
newdata_tpc %>% group_by(Line) %>% summarise(topt = Temperature[which.max(predict_tpc)])
newdata_tpc %>% group_by(Line) %>% summarise(ctmin = Temperature[which.min(predict_tpc[which(Temperature < 20)] - 0)])
which(newdata_tpc$Temperature < 20)
newdata_tpc %>% group_by(Line) %>% summarise(ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))])
ggplot(data = tpc_data, aes(x = Temperature, y = Growth.Rate.Hours, color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which.min(abs(predict_tpc[which(Temperature > 20)] - 0))],
thermal_range = ctmax - ctmin)
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which.min(abs(predict_tpc[which(Temperature > 30)] - 0))],
thermal_range = ctmax - ctmin)
View(tpc_descriptions)
tpc_data <- read.csv(file = 'StartPop_TPC.csv')
tpc_data <- tpc_data %>% filter(Genotype != 'blank')
tpc_data$Genotype <- as.factor(paste0('G', tpc_data$Genotype))
colnames(tpc_data)[5] <- 'Line'
tpc_data <- tpc_data %>% filter(!is.na(Growth.Rate.Hours))
tpc_data <- tpc_data %>% filter(!is.infinite(Growth.Rate.Hours))
newdata_tpc <- data.frame(Temperature = rep(seq(0, 40, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 401))
predict_tpc <- predict.gam(gam_growth, newdata = newdata_tpc)
newdata_tpc <- cbind(newdata_tpc, predict_tpc)
tpc_predictions <- newdata_tpc %>% group_by(Line) %>%
summarise(mean_growth = mean(predict_tpc),
min_growth = min(predict_tpc),
max_growth = max(predict_tpc),
range_growth = max_growth-min_growth,
stand_range_growth = range_growth/max_growth)
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which.min(abs(predict_tpc[which(Temperature > 30)] - 0))],
thermal_range = ctmax - ctmin)
tpc_descriptions
newdata_tpc$Temperature[which.min(abs(newdata_tpc$predict_tpc[which(newdata_tpc$Temperature > 30)] - 0))]
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which.min(abs(predict_tpc[which(Temperature > 32)] - 0))],
thermal_range = ctmax - ctmin)
tpc_descriptions
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which(Temperature>32)][which.min(abs(predict_tpc[which(Temperature > 32)] - 0))],
thermal_range = ctmax - ctmin)
tpc_descriptions
length(seq(0, 45, by = 0.1))
newdata_tpc <- data.frame(Temperature = rep(seq(0, 45, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 451))
predict_tpc <- predict.gam(gam_growth, newdata = newdata_tpc)
newdata_tpc <- cbind(newdata_tpc, predict_tpc)
tpc_predictions <- newdata_tpc %>% group_by(Line) %>%
summarise(mean_growth = mean(predict_tpc),
min_growth = min(predict_tpc),
max_growth = max(predict_tpc),
range_growth = max_growth-min_growth,
stand_range_growth = range_growth/max_growth)
tpc_descriptions <- newdata_tpc %>% group_by(Line) %>%
summarise(topt = Temperature[which.max(predict_tpc)],
ctmin = Temperature[which.min(abs(predict_tpc[which(Temperature < 20)] - 0))],
ctmax = Temperature[which(Temperature>32)][which.min(abs(predict_tpc[which(Temperature > 32)] - 0))],
thermal_range = ctmax - ctmin)
tpc_descriptions
col_data <- full_join(area_predictions, tpc_predictions, by = "Line")
col_data <- full_join(col_data, length_predictions, by = 'Line')
col_data <- full_join(col_data, width_predictions, by = "Line")
col_data <- full_join(col_data, ar_predictions, by = "Line")
col_data <- full_join(col_data, speed_predictions, by = "Line")
col_data <- full_join(col_data, tpc_desriptions)
col_data <- full_join(col_data, tpc_descriptions)
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_speed, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_area)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_width)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_speed)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = stand_range_speed)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_area, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_speed, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_length, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_width, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_ar, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_speed, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_speed, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_ar, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_length, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_area, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = thermal_range)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_area, y = thermal_range)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = thermal_range)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = ctmax)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_ar, y = ctmax)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_ar, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_speed, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_speed, y = ctmax)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_area, y = ctmax)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_area, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_length, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_ar, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_ar, y = ctmin)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_ar, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_area, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
area_predictions <- newdata_area %>% group_by(Line) %>%
summarise(mean_area = mean(area_predictions),
min_area = min(area_predictions),
max_area = max(area_predictions),
range_area = max_area-min_area,
stand_range_area = range_area/max_area,
Temp_at_minarea = Temperature[which.min(area_predictions)])
col_data <- full_join(area_predictions, tpc_predictions, by = "Line")
col_data <- full_join(col_data, length_predictions, by = 'Line')
col_data <- full_join(col_data, width_predictions, by = "Line")
col_data <- full_join(col_data, ar_predictions, by = "Line")
col_data <- full_join(col_data, speed_predictions, by = "Line")
col_data <- full_join(col_data, tpc_descriptions, by = "Line")
ggplot(data = col_data, aes(x = Temp_at_minarea, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = Temp_at_minarea, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
length_predictions <- newdata_length %>% group_by(Line) %>%
summarise(mean_length = mean(length_predictions),
min_length = min(length_predictions),
max_length = max(length_predictions),
range_length = max_length-min_length,
stand_range_length = range_length/max_length,
Temp_at_minlength = Temperature[which.min(length_predictions)])
col_data <- full_join(area_predictions, tpc_predictions, by = "Line")
col_data <- full_join(col_data, length_predictions, by = 'Line')
col_data <- full_join(col_data, width_predictions, by = "Line")
col_data <- full_join(col_data, ar_predictions, by = "Line")
col_data <- full_join(col_data, speed_predictions, by = "Line")
col_data <- full_join(col_data, tpc_descriptions, by = "Line")
ggplot(data = col_data, aes(x = Temp_at_minarea, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = Temp_at_minlength, y = topt)) + geom_point() +
geom_smooth(method = 'lm')
draw(gam_area, residuals = TRUE)
ggplot(data = morph_data, aes(x = Temperatrue, y = mean_area)) + geom_point()
ggplot(data = morph_data, aes(x = Temperature, y = mean_area)) + geom_point()
ggplot(data = morph_data, aes(x = Temperature, y = log(mean_area), color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
draw(gam_speed, residuals = TRUE)
ggplot(data = morph_data, aes(x = Temperature, y = gross_speed)) + geom_point()
summary(gam_speed)
draw(gam_area, residuals = TRUE)
summary(gam_area)
draw(gam_growth, residuals = TRUE)
ggplot(data = tpc_data, aes(x = Temperature, y = Growth.Rate.Hours, color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_length)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_length)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_width, y = stand_range_length)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_width, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_speed, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_speed, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_width, y = stand_range_ar)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_width, y = stand_range_length)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = morph_data, aes(x = Temperature, y = mean_ar, color = Line)) +
geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE)
draw(gam_ar, residuals = TRUE)
draw(gam_width, residuals = TRUE)
draw(gam_length, residuals = TRUE)
newdata_tpc <- data.frame(Temperature = rep(seq(10, 34, by = 0.1),20),
Line = rep(unique(morph_data$Line), each = 241))
predict_tpc <- predict.gam(gam_growth, newdata = newdata_tpc)
newdata_tpc <- cbind(newdata_tpc, predict_tpc)
tpc_predictions <- newdata_tpc %>% group_by(Line) %>%
summarise(mean_growth = mean(predict_tpc),
min_growth = min(predict_tpc),
max_growth = max(predict_tpc),
range_growth = max_growth-min_growth,
stand_range_growth = range_growth/max_growth)
unique(newdata_ar$Line)
plot(x = select(filter(newdata_ar, Line == 'G33'), ar_predictions),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc))
select(filter(newdata_ar, Line == 'G33'), ar_predictions)
select(filter(newdata_tpc, Line == 'G33'), predict_tpc)
plot(x = seq(10, 34, by = 0.01),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc))
seq(10, 34, by = 0.1)
select(filter(newdata_tpc, Line == 'G33'), predict_tpc)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc))
select(filter(newdata_ar, Line == 'G33'), ar_predictions)
try <- select(filter(newdata_ar, Line == 'G33'), ar_predictions)
View(try)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)
lines(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc/(max(select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)))
lines(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions))
draw(gam_ar, residuals = TRUE)
select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G34'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G102'), predict_tpc)$predict_tpc/(max(select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)))
lines(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions))
lines(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G120'), predict_tpc)$predict_tpc/(max(select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)))
lines(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_tpc, Line == 'G120'), predict_tpc)$predict_tpc/(max(select(filter(newdata_tpc, Line == 'G120'), predict_tpc)$predict_tpc)))
lines(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_length, Line == 'G120'), length_predictions)$length_predictions/(max(select(filter(newdata_length, Line == 'G120'), length_predictions)$length_predictions)))
lines(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions/(max(select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions)))
lines(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions))
lines(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions))
select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions/(max(select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions)))
lines(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions))
points(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions))
select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions)
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions)))
plot(x = seq(10, 34, by = 0.1),
y = select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions/max(select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions))
points(select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions/(max(select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions)))
View(morph_data)
plot(x = select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions,
y = select(filter(newdata_ar, Line == 'G102'), ar_predictions)$ar_predictions)
plot(x = select(filter(newdata_length, Line == 'G120'), length_predictions)$length_predictions,
y = select(filter(newdata_ar, Line == 'G120'), ar_predictions)$ar_predictions)
plot(x = select(filter(newdata_length, Line == 'G33'), length_predictions)$length_predictions,
y = select(filter(newdata_ar, Line == 'G33'), ar_predictions)$ar_predictions)
plot(x = select(filter(newdata_length, Line == 'G33'), length_predictions)$length_predictions,
y = select(filter(newdata_growth, Line == 'G33'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G33'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G34'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G34'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G102'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G102'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G120'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G120'), predict_tpc)$predict_tpc)
draw(gam_area, residuals = TRUE)
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_ar, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = stand_range_length y = stand_range_growth)) + geom_point() +
ggplot(data = col_data, aes(x = stand_range_length, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
plot(x = select(filter(newdata_length, Line == 'G120'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G120'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G33'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G33'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G34'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G34'), predict_tpc)$predict_tpc)
plot(x = select(filter(newdata_length, Line == 'G69'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G69'), predict_tpc)$predict_tpc)
ggplot(data = col_data, aes(x = mean_length, y = mean_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = mean_length, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_length, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_ar, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_ar, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_speed, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_speed, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = max_width, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = col_data, aes(x = min_width, y = max_growth)) + geom_point() +
geom_smooth(method = 'lm')
ggplot(data = morph_data, aes(x = mean_area, y = mean_major, color = Line)) + geom_point()
ggplot(data = morph_data, aes(x = mean_area, y = mean_major, color = Line)) + geom_point() + geom_smooth(method = 'lm')
ggplot(data = morph_data, aes(x = mean_ar, y = mean_major, color = Line)) + geom_point() + geom_smooth(method = 'lm')
ggplot(data = morph_data, aes(x = mean_minor, y = mean_major, color = Line)) + geom_point() + geom_smooth(method = 'lm')
plot(x = select(filter(newdata_length, Line == 'G69'), length_predictions)$length_predictions,
y = select(filter(newdata_tpc, Line == 'G69'), predict_tpc)$predict_tpc)
ggplot(data = col_data, aes(x = stand_range_area, y = stand_range_growth)) + geom_point() +
geom_smooth(method = 'lm')
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kylec/Documents/GitHub/FR_n-prey-at-a-time/ms/PlasticityandGrowth_Paramecium/GAM_Analysis/')
morph_data <- read.csv('Plast_StartPop_Data.csv')
library(dplyr); library(ggplot2); library(cowplot); library(mgcv)
library(dplyr); library(ggplot2); library(cowplot); library(mgcv); library(gratia)
morph_data <- read.csv('Plast_StartPop_Data.csv')
morph_data <- morph_data %>% mutate(Line = as.factor(sapply(strsplit(morph_data$file, split = "_"),'[[', 4)),
Temperature = as.numeric(sapply(strsplit(morph_data$file, split = "_"),'[[', 3)),
LineTemp = paste(Line, Temperature, sep = "_"))
morph_data <- filter(morph_data, Temperature < 37)
ggplot(data = morph_data, aes(x = Temperature, y = mean_major)) + geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE) +
facet_wrap(facets = "Line", nrow = 5, ncol = 4)
ggplot(data = morph_data, aes(x = Temperature, y = mean_major)) + geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE) +
facet_wrap(facets = "Line", nrow = 4, ncol = 5)
?facet_wrap
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, k = 5, bs = 'tp', by = Temperature), method = 'REML')
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, k = 5, bs = 'tp', by = Temperature), data = morph_data, method = 'REML')
summary(gam_length)
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, k = 5, bs = 'tp', by = Line), data = morph_data, method = 'REML')
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, k = 5, bs = 'tp', by = Line), data = morph_data, method = 'REML')
summary(gam_length)
gam_length_noint <- gam(formula = Line + s(Temperature, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
gam_length_noint <- gam(formula = mean_major ~ Line + s(Temperature, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
summary(gam_length_noint)
aic(gam_length)
AIC(gam_length)
AIC(gam_length_noint)
1/0.15
gam_length <- gam(formula = mean_major ~ s(Line, bs = 're') + s(Temperature, Line, k = 5, bs = 're'), data = morph_data, method = 'REML')
summary(gam_length)
draw(gam_length)
gam_length <- gam(formula = mean_major ~ s(Line, bs = 're') + s(Temperature, Line, k = 5, bs = 're') + s(Temperature, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
summary(gam_length)
draw(gam_length)
AIC(gam_length)
AIC(gam_length_noint)
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, by = Line, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
summary(gam_length)
draw(gam_length)
AIC(gam_length)
AIC(gam_length_noint)
?draw
plot(gam_length)
plot(gam_length, residuals = TRUE)
?plot.gam
plot(gam_length, residuals = TRUE, rug = TRUE)
draw(gam_length, residuals = TRUE, rug = TRUE)
draw(gam_length, residuals = TRUE, rug = TRUE, pages = 20)
for (i in 1:length(smooths(gam_length))) {
out <- draw(gam_length, select = i)     print(out) }
length(smooths(gam_length))
for (i in 1:length(smooths(gam_length))) {
out <- draw(gam_length, select = i)
print(out) }
for (i in 1:length(smooths(gam_length))) {
out <- draw(gam_length, select = i, residuals = TRUE)
print(out) }
AIC(gam_length, gam_length_noint)
ggplot(data = morph_data, aes(x = Temperature, y = mean_minor)) + geom_point() + geom_smooth(method = 'gam', formula = y ~ s(x, k = 5, bs = 'tp'), se = FALSE) +
facet_wrap(facets = "Line", nrow = 4, ncol = 5)
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, by = Line, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, by = Line, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
gam_length <- gam(formula = mean_major ~ Line + s(Temperature, by = Line, k = 5, bs = 'tp'), data = morph_data, method = 'REML'
summary(gam_width)
gam_width <- gam(formula = mean_minor ~ Line + s(Temperature, by = Line, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
summary(gam_width)
for (i in 1:length(smooths(gam_width))) {
out <- draw(gam_width, select = i, residuals = TRUE)
print(out) }
gam_width_noint <- gam(formula = mean_minor ~ Line + s(Temperature, k = 5, bs = 'tp'), data = morph_data, method = 'REML')
AIC(gam_width, gam_width_noint)
